spring:
  application:
    name: microservice-gateway-zuul
#  rabbitmq:
#    host: 39.106.72.143
#    port: 5672
#    username: guest
#    password: datasparking
        
#durid configuration
  datasource: 
 #   type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://db.suntrayoa.com:3306/crcc_s?useUnicode=true&amp;characterEncoding=utf-8;autoReconnect=true&allowMultiQueries=true 
    username: crcc_s
    password: crcc_s@321
    initialSize: 0
    minIdle: 0
    maxActive: 1000
    maxWait: -1
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 1800000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
    filters: log4j,wall,mergeStat,config  #不能跟proxyFilters同时使用
#    proxyFilters : WallFilter  #为了批量跟新添加定制Filters
    connectionProperties: config.decrypt=false
    removeAbandoned: true
    druid.removeAbandonedTimeout: 600
#    useGlobalDataSourceStat: true
      
    
  redis:
    host: 59.110.26.65
    port: 16379
    password: 
    database: 1
    pool:
      maxActive: 5000
      maxWait: 2000
      maxIdle: 500
      minIdle: 0
      retryNum: 3
    timeout: 500

server:
  port: 8046
eureka:
  client:
    service-url:
      defaultZone: http://user:password123@localhost:8761/eureka
  instance:
    prefer-ip-address: true
zuul:
  routes:
    auth:
      path: /auth/**
      serviceId: microservice-authorization-server
    contract:
      path: /contract/**
      serviceId: microservice-contract
    finance:
      path: /finance/**
      serviceId: microservice-finance
    logistics:
      path: /logistics/**
      serviceId: microservice-logistics
    merchandise:
      path: /merchandise/**
      serviceId: microservice-merchandise
    message:
      path: /message/**
      serviceId: microservice-message
    portal:
      path: /portal/**
      serviceId: microservice-portal
    sso:
      path: /sso/**
      serviceId: microservice-sso
    supplier:
      path: /supplier/**
      serviceId: microservice-supplier
